"""initial schema

Revision ID: b140e737f3b4
Revises: 
Create Date: 2025-10-11 00:22:09.022064

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b140e737f3b4'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('disciplines',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('code', sa.String(length=32), nullable=False),
    sa.Column('attempts_count', sa.Integer(), nullable=False),
    sa.Column('average_calculation_type', sa.String(length=32), nullable=False),
    sa.Column('dnf_threshold', sa.Integer(), nullable=False),
    sa.Column('max_time_minutes', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('telegram_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('role', sa.Enum('participant', 'organizer', 'admin', name='user_role'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_telegram_id'), 'users', ['telegram_id'], unique=True)
    op.create_table('competitions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('competition_code', sa.String(length=16), nullable=False),
    sa.Column('organizer_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('draft', 'active', 'completed', 'cancelled', name='competition_status'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['organizer_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_competitions_competition_code'), 'competitions', ['competition_code'], unique=True)
    op.create_table('competition_disciplines',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('competition_id', sa.Integer(), nullable=False),
    sa.Column('discipline_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['competition_id'], ['competitions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['discipline_id'], ['disciplines.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('competition_id', 'discipline_id', name='uq_competition_discipline')
    )
    op.create_table('leaderboards',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('competition_id', sa.Integer(), nullable=False),
    sa.Column('discipline_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('average_time', sa.Integer(), nullable=True),
    sa.Column('average_dnf', sa.Boolean(), nullable=False),
    sa.Column('best_time', sa.Integer(), nullable=True),
    sa.Column('points', sa.Integer(), nullable=False),
    sa.Column('calculated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['competition_id'], ['competitions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['discipline_id'], ['disciplines.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('competition_id', 'discipline_id', 'user_id', name='uq_leaderboard_unique')
    )
    op.create_index('ix_leaderboards_comp_disc', 'leaderboards', ['competition_id', 'discipline_id'], unique=False)
    op.create_table('overall_leaderboard',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('competition_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('total_points', sa.Integer(), nullable=False),
    sa.Column('disciplines_participated', sa.Integer(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('calculated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['competition_id'], ['competitions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('competition_id', 'user_id', name='uq_overall_unique')
    )
    op.create_index('ix_overall_competition', 'overall_leaderboard', ['competition_id'], unique=False)
    op.create_table('participants',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('competition_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('registration_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['competition_id'], ['competitions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('competition_id', 'user_id', name='uq_participant_unique')
    )
    op.create_index('ix_participants_comp_user', 'participants', ['competition_id', 'user_id'], unique=False)
    op.create_table('scrambles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('competition_id', sa.Integer(), nullable=False),
    sa.Column('discipline_id', sa.Integer(), nullable=False),
    sa.Column('attempt_number', sa.Integer(), nullable=False),
    sa.Column('file_id', sa.String(length=255), nullable=True),
    sa.Column('file_path', sa.String(length=500), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['competition_id'], ['competitions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['discipline_id'], ['disciplines.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('competition_id', 'discipline_id', 'attempt_number', name='uq_scramble_attempt')
    )
    op.create_index('ix_scrambles_comp_disc', 'scrambles', ['competition_id', 'discipline_id'], unique=False)
    op.create_table('results',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('participant_id', sa.Integer(), nullable=False),
    sa.Column('discipline_id', sa.Integer(), nullable=False),
    sa.Column('attempt_1_time', sa.Integer(), nullable=True),
    sa.Column('attempt_1_dnf', sa.Boolean(), nullable=False),
    sa.Column('attempt_2_time', sa.Integer(), nullable=True),
    sa.Column('attempt_2_dnf', sa.Boolean(), nullable=False),
    sa.Column('attempt_3_time', sa.Integer(), nullable=True),
    sa.Column('attempt_3_dnf', sa.Boolean(), nullable=False),
    sa.Column('attempt_4_time', sa.Integer(), nullable=True),
    sa.Column('attempt_4_dnf', sa.Boolean(), nullable=False),
    sa.Column('attempt_5_time', sa.Integer(), nullable=True),
    sa.Column('attempt_5_dnf', sa.Boolean(), nullable=False),
    sa.Column('average_time', sa.Integer(), nullable=True),
    sa.Column('average_dnf', sa.Boolean(), nullable=False),
    sa.Column('best_time', sa.Integer(), nullable=True),
    sa.Column('submitted_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('attempt_1_time >= 0 OR attempt_1_time IS NULL', name='ck_result_attempt_1_time_non_negative'),
    sa.ForeignKeyConstraint(['discipline_id'], ['disciplines.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['participant_id'], ['participants.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('participant_id', 'discipline_id', name='uq_results_participant_discipline')
    )
    op.create_index('ix_results_participant_discipline', 'results', ['participant_id', 'discipline_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_results_participant_discipline', table_name='results')
    op.drop_table('results')
    op.drop_index('ix_scrambles_comp_disc', table_name='scrambles')
    op.drop_table('scrambles')
    op.drop_index('ix_participants_comp_user', table_name='participants')
    op.drop_table('participants')
    op.drop_index('ix_overall_competition', table_name='overall_leaderboard')
    op.drop_table('overall_leaderboard')
    op.drop_index('ix_leaderboards_comp_disc', table_name='leaderboards')
    op.drop_table('leaderboards')
    op.drop_table('competition_disciplines')
    op.drop_index(op.f('ix_competitions_competition_code'), table_name='competitions')
    op.drop_table('competitions')
    op.drop_index(op.f('ix_users_telegram_id'), table_name='users')
    op.drop_table('users')
    op.drop_table('disciplines')
    # ### end Alembic commands ###
